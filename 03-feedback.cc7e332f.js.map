{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAGA,GAAuB,oBAAZC,QAAyB,CAElC,IAAMC,EAAOC,SAASC,cAAc,kBAC9BC,EAAaH,EAAKE,cAAc,uBAChCE,EAAkBJ,EAAKE,cAAc,4BAGrCG,EACJC,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2B,GAG7DN,EAAWO,MAAQL,EAAWM,OAAS,GACvCP,EAAgBM,MAAQL,EAAWO,SAAW,GAG9C,IAAMC,EAAwBC,EAAAjB,EAAA,EAAS,WAErC,IAAMkB,EAAQ,CACZJ,MAAOR,EAAWO,MAClBE,QAASR,EAAgBM,OAG3BF,aAAaQ,QAAQ,sBAAuBV,KAAKW,UAAUF,G,GAC1D,KAGHZ,EAAWe,iBAAiB,QAASL,GACrCT,EAAgBc,iBAAiB,QAASL,GAG1Cb,EAAKkB,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAGNZ,aAAaa,WAAW,uBAGxB,IAAMV,EAAQR,EAAWO,MACnBE,EAAUR,EAAgBM,MAGhCY,QAAQC,IAAI,CAAEZ,QAAOC,YAGrBT,EAAWO,MAAQ,GACnBN,EAAgBM,MAAQ,E,SAI1BY,QAAQE,MAAM,kD","sources":["src/js/03-feedback.js"],"sourcesContent":["// Import the throttle function from the lodash library\nimport throttle from 'lodash/throttle';\n\n// Check if the browser supports local storage\nif (typeof Storage !== 'undefined') {\n  // Select the feedback form and its input fields\n  const form = document.querySelector('.feedback-form');\n  const emailInput = form.querySelector('input[name=\"email\"]');\n  const messageTextarea = form.querySelector('textarea[name=\"message\"]');\n\n  // Retrieve the saved state from local storage or initialize an empty object\n  const savedState =\n    JSON.parse(localStorage.getItem('feedback-form-state')) || {};\n\n  // Populate the email and message fields with saved values if available\n  emailInput.value = savedState.email || '';\n  messageTextarea.value = savedState.message || '';\n\n  // Create a throttled function to save form state to local storage with a 500ms delay\n  const saveStateWithThrottle = throttle(() => {\n    // Create an object with the current email and message values\n    const state = {\n      email: emailInput.value,\n      message: messageTextarea.value,\n    };\n    // Store the state object as a JSON string in local storage\n    localStorage.setItem('feedback-form-state', JSON.stringify(state));\n  }, 500);\n\n  // Add input event listeners to email and message fields to trigger state saving\n  emailInput.addEventListener('input', saveStateWithThrottle);\n  messageTextarea.addEventListener('input', saveStateWithThrottle);\n\n  // Add a submit event listener to the form\n  form.addEventListener('submit', event => {\n    event.preventDefault();\n\n    // Remove the saved state from local storage\n    localStorage.removeItem('feedback-form-state');\n\n    // Get the current values of the email and message fields\n    const email = emailInput.value;\n    const message = messageTextarea.value;\n\n    // Log the email and message values to the console\n    console.log({ email, message });\n\n    // Clear the email and message fields after submitting the form\n    emailInput.value = '';\n    messageTextarea.value = '';\n  });\n} else {\n  // If local storage is not supported, display an error message in the console\n  console.error('Local storage is not supported in this browser.');\n}\n"],"names":["$eaxEB","parcelRequire","Storage","$b00c40859be242c5$var$form","document","querySelector","$b00c40859be242c5$var$emailInput","$b00c40859be242c5$var$messageTextarea","$b00c40859be242c5$var$savedState","JSON","parse","localStorage","getItem","value","email","message","$b00c40859be242c5$var$saveStateWithThrottle","$parcel$interopDefault","state","setItem","stringify","addEventListener","event","preventDefault","removeItem","console","log","error"],"version":3,"file":"03-feedback.cc7e332f.js.map"}